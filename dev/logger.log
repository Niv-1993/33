[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 3000:
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 3000, Shelves
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalController,Line:79] - Select query: SELECT transportationID FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT categoryID 
FROM Category
WHERE storeID=?; params: [1]
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4]
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT typeID 
FROM ProductType
WHERE storeID=?; params: [1]
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:126] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:130] - {Business.StockBusiness.Type.ProductType@732f29af=Business.StockBusiness.instance.InstanceController@25a6944c, Business.StockBusiness.Type.ProductType@23fb172e=Business.StockBusiness.instance.InstanceController@5e1fa5b1, Business.StockBusiness.Type.ProductType@4b45dcb8=Business.StockBusiness.instance.InstanceController@6b00f608, Business.StockBusiness.Type.ProductType@acdb094=Business.StockBusiness.instance.InstanceController@2f17e30d, Business.StockBusiness.Type.ProductType@70a36a66=Business.StockBusiness.instance.InstanceController@3e821657, Business.StockBusiness.Type.ProductType@2072acb2=Business.StockBusiness.instance.InstanceController@1d131e1b, Business.StockBusiness.Type.ProductType@d3957fe=Business.StockBusiness.instance.InstanceController@71cf1b07, Business.StockBusiness.Type.ProductType@299321e2=Business.StockBusiness.instance.InstanceController@615091b8, Business.StockBusiness.Type.ProductType@35a9782c=Business.StockBusiness.instance.InstanceController@4fce136b, Business.StockBusiness.Type.ProductType@674bd420=Business.StockBusiness.instance.InstanceController@4aa83f4f, Business.StockBusiness.Type.ProductType@2ceb80a1=Business.StockBusiness.instance.InstanceController@43b6123e, Business.StockBusiness.Type.ProductType@2b0f373b=Business.StockBusiness.instance.InstanceController@260e86a1, Business.StockBusiness.Type.ProductType@7216fb24=Business.StockBusiness.instance.InstanceController@19648c40, Business.StockBusiness.Type.ProductType@57ea113a=Business.StockBusiness.instance.InstanceController@12bd8a64, Business.StockBusiness.Type.ProductType@50ecde95=Business.StockBusiness.instance.InstanceController@61e94def, Business.StockBusiness.Type.ProductType@45815ffc=Business.StockBusiness.instance.InstanceController@3300f4fd, Business.StockBusiness.Type.ProductType@6622fc65=Business.StockBusiness.instance.InstanceController@ebb6851, Business.StockBusiness.Type.ProductType@158a3b2e=Business.StockBusiness.instance.InstanceController@70ab2d48, Business.StockBusiness.Type.ProductType@64ba3208=Business.StockBusiness.instance.InstanceController@5b068087}
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT shelfID 
FROM Shelf
WHERE storeID=?; params: [1]
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT categoryID 
FROM Category
WHERE storeID=?; params: [2]
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4]
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT typeID 
FROM ProductType
WHERE storeID=?; params: [2]
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:126] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:18 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:18 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:18 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:130] - {Business.StockBusiness.Type.ProductType@7cbc3762=Business.StockBusiness.instance.InstanceController@44040454, Business.StockBusiness.Type.ProductType@3a6f2de3=Business.StockBusiness.instance.InstanceController@65fe9e33, Business.StockBusiness.Type.ProductType@13518f37=Business.StockBusiness.instance.InstanceController@18bc345, Business.StockBusiness.Type.ProductType@8692d67=Business.StockBusiness.instance.InstanceController@42f8285e, Business.StockBusiness.Type.ProductType@753432a2=Business.StockBusiness.instance.InstanceController@26bab2f1, Business.StockBusiness.Type.ProductType@78f5c518=Business.StockBusiness.instance.InstanceController@3724af13, Business.StockBusiness.Type.ProductType@1d2bd371=Business.StockBusiness.instance.InstanceController@68ead359, Business.StockBusiness.Type.ProductType@3a393455=Business.StockBusiness.instance.InstanceController@6b53bcc2, Business.StockBusiness.Type.ProductType@4c550889=Business.StockBusiness.instance.InstanceController@180da663, Business.StockBusiness.Type.ProductType@101639ae=Business.StockBusiness.instance.InstanceController@a43ce46, Business.StockBusiness.Type.ProductType@56303b57=Business.StockBusiness.instance.InstanceController@340da44c, Business.StockBusiness.Type.ProductType@4b2a01d4=Business.StockBusiness.instance.InstanceController@424ebba3, Business.StockBusiness.Type.ProductType@23bff419=Business.StockBusiness.instance.InstanceController@37052337, Business.StockBusiness.Type.ProductType@6f152006=Business.StockBusiness.instance.InstanceController@2320fa6f, Business.StockBusiness.Type.ProductType@34f7234e=Business.StockBusiness.instance.InstanceController@7a560583, Business.StockBusiness.Type.ProductType@49872d67=Business.StockBusiness.instance.InstanceController@4d722ac9, Business.StockBusiness.Type.ProductType@4983159f=Business.StockBusiness.instance.InstanceController@53f0a4cb, Business.StockBusiness.Type.ProductType@2f48b3d2=Business.StockBusiness.instance.InstanceController@77a7cf58, Business.StockBusiness.Type.ProductType@44e3a2b2=Business.StockBusiness.instance.InstanceController@3d97a632}
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT shelfID 
FROM Shelf
WHERE storeID=?; params: [2]
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT categoryID 
FROM Category
WHERE storeID=?; params: [3]
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT typeID 
FROM ProductType
WHERE storeID=?; params: [3]
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:126] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:130] - {Business.StockBusiness.Type.ProductType@56e8b606=Business.StockBusiness.instance.InstanceController@366c4480, Business.StockBusiness.Type.ProductType@293a5f75=Business.StockBusiness.instance.InstanceController@2c7b5824, Business.StockBusiness.Type.ProductType@7966baa7=Business.StockBusiness.instance.InstanceController@302a07d, Business.StockBusiness.Type.ProductType@60957c0f=Business.StockBusiness.instance.InstanceController@5cdd09b1, Business.StockBusiness.Type.ProductType@1dd6d4b7=Business.StockBusiness.instance.InstanceController@8c11eee, Business.StockBusiness.Type.ProductType@616fe72b=Business.StockBusiness.instance.InstanceController@7e8dcdaa, Business.StockBusiness.Type.ProductType@61c9c3fd=Business.StockBusiness.instance.InstanceController@681a8b4e, Business.StockBusiness.Type.ProductType@2d36e77e=Business.StockBusiness.instance.InstanceController@5cbe877d, Business.StockBusiness.Type.ProductType@7e5d9a50=Business.StockBusiness.instance.InstanceController@5c08c46a, Business.StockBusiness.Type.ProductType@784c3487=Business.StockBusiness.instance.InstanceController@4cf8b2dc, Business.StockBusiness.Type.ProductType@37efd131=Business.StockBusiness.instance.InstanceController@708400f6, Business.StockBusiness.Type.ProductType@40dff0b7=Business.StockBusiness.instance.InstanceController@5829e4f4, Business.StockBusiness.Type.ProductType@7e7b159b=Business.StockBusiness.instance.InstanceController@4218500f, Business.StockBusiness.Type.ProductType@60975100=Business.StockBusiness.instance.InstanceController@4bff64c2, Business.StockBusiness.Type.ProductType@1253e7cb=Business.StockBusiness.instance.InstanceController@1b2c4efb, Business.StockBusiness.Type.ProductType@53142455=Business.StockBusiness.instance.InstanceController@c35172e, Business.StockBusiness.Type.ProductType@3b0c9195=Business.StockBusiness.instance.InstanceController@c2db68f, Business.StockBusiness.Type.ProductType@fcb4004=Business.StockBusiness.instance.InstanceController@3cc41abc, Business.StockBusiness.Type.ProductType@2dd29a59=Business.StockBusiness.instance.InstanceController@4566d049}
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT shelfID 
FROM Shelf
WHERE storeID=?; params: [3]
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM StoreController WHERE storeID=? params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.SMapper,Line:116] - mapper returned null on:class DataAccess.DalStock.DALStoreController
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:95] - storeID is not in DB
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Fcade.StorageService,Line:486] - java.lang.IllegalArgumentException: storeID is not in DB
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT numOfOrders FROM SupplierController
WHERE controller = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Suppliers
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: Select * FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:39] - create new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [8]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT minimalAmount FROM QuantityDocuments
WHERE itemId = ?; params: [8]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT weight FROM Items
WHERE itemId = ?; params: [8]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [15]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT weight FROM Items
WHERE itemId = ?; params: [15]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT weight FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [14]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT weight FROM Items
WHERE itemId = ?; params: [14]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.ApplicationFacade.ManagerRoleController,Line:418] - loading data of branch id: 2
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.Shift,Line:54] - shift: 25 created
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.ShiftController,Line:290] - EID: 12 remove from optionals
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.ShiftController,Line:290] - EID: 19 remove from optionals
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.ShiftController,Line:290] - EID: 26 remove from optionals
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.ShiftController,Line:290] - EID: 18 remove from optionals
[DEBUG] 15-06-2021 15:35:19 [class: Business.ApplicationFacade.ManagerRoleController,Line:418] - loading data of branch id: 2
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.ApplicationFacade.ManagerRoleController,Line:418] - loading data of branch id: 2
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.Shift,Line:152] - EID: 100 remove from optionals
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.Shift,Line:105] - EID: 100added to SID: 25
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.Shift,Line:152] - EID: 13 remove from optionals
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.Shift,Line:105] - EID: 13added to SID: 25
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.Shift,Line:54] - shift: 26 created
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.ShiftController,Line:290] - EID: 11 remove from optionals
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.ShiftController,Line:290] - EID: 18 remove from optionals
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.ShiftController,Line:290] - EID: 25 remove from optionals
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.ShiftController,Line:290] - EID: 19 remove from optionals
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.Shift,Line:152] - EID: 13 remove from optionals
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.TempConstraint,Line:17] - Temp constraint 41 created
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.Shift,Line:152] - EID: 100 remove from optionals
[DEBUG] 15-06-2021 15:35:19 [class: Business.Employees.ShiftPKG.TempConstraint,Line:17] - Temp constraint 42 created
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT transportationID FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT numOfOrders FROM SupplierController
WHERE controller = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Suppliers
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: Select * FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:39] - create new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT minimalAmount FROM QuantityDocuments
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT discount FROM QuantityDocuments
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT weight FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT weight FROM Items
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT weight FROM Items
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: Select * FROM Orders
WHERE orderId = ?; params: [0]
failed due to 
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:39] - create new Object
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:88] - loaded new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [8]
failed due to 
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Item,Line:62] - loaded new Object
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [15]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [14]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT transportationID FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT minimalAmount FROM QuantityDocuments
WHERE itemId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT discount FROM QuantityDocuments
WHERE itemId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT weight FROM Items
WHERE itemId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [1]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 1, Wed Jun 15 00:00:00 IDT 2022
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:1
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 5, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 6, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 7, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 8, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 9, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 10, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 11, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 12, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 13, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 14, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 15, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 16, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 17, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 18, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 19, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 20, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:762] - the product with productType #1 need new shelf.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 12
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 7
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 3
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 0
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 4 to 1
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=1, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=4, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 1, 4, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Wed Jun 15 00:00:00 IDT 2022, Shelves, 4
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 1000]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 1000:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 1000, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [1]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 1, Wed Jun 15 00:00:00 IDT 2022
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:1
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 4 to 1
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=1, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=4, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 1, 4, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[1000]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Wed Jun 15 00:00:00 IDT 2022, Shelves, 4
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 1001]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 1001:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 1001, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [1]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 1, Wed Jun 15 00:00:00 IDT 2022
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:1
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 4 to 1
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=1, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=4, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 1, 4, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[1000, 1001]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Wed Jun 15 00:00:00 IDT 2022, Shelves, 4
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 1002]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 1002:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 1002, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [1]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 1, Wed Jun 15 00:00:00 IDT 2022
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:1
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 4 to 1
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=1, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=4, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 1, 4, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[1000, 1001, 1002]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Wed Jun 15 00:00:00 IDT 2022, Shelves, 4
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 1003]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 1003:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 1003, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [1]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 1, Wed Jun 15 00:00:00 IDT 2022
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:1
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 4 to 1
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=1, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=4, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 1, 4, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[1000, 1001, 1002, 1003]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Wed Jun 15 00:00:00 IDT 2022, Shelves, 4
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 1004]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 1004:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 1004, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT minimalAmount FROM QuantityDocuments
WHERE itemId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT discount FROM QuantityDocuments
WHERE itemId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT weight FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 2, Wed Jun 15 00:00:00 IDT 2022
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:2
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 5, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 6, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 7, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 8, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 9, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 10, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 11, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 12, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 13, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 14, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 15, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 16, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 17, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 18, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 19, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 20, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:762] - the product with productType #2 need new shelf.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 12
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 7
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 3
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 1
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 0
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 5 to 2
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=5, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 2, 5, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Wed Jun 15 00:00:00 IDT 2022, Shelves, 5
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 2000]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 2000:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 2000, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 2, Wed Jun 15 00:00:00 IDT 2022
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:2
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 5 to 2
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=5, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 2, 5, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[2000]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Wed Jun 15 00:00:00 IDT 2022, Shelves, 5
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 2001]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 2001:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 2001, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 2, Wed Jun 15 00:00:00 IDT 2022
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:2
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 5 to 2
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=5, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 2, 5, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[2000, 2001]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Wed Jun 15 00:00:00 IDT 2022, Shelves, 5
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 2002]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 2002:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 2002, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 2, Wed Jun 15 00:00:00 IDT 2022
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:2
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 5 to 2
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=5, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 2, 5, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[2000, 2001, 2002]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Wed Jun 15 00:00:00 IDT 2022, Shelves, 5
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 2003]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 2003:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 2003, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 2, Wed Jun 15 00:00:00 IDT 2022
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:2
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 5 to 2
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=5, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 2, 5, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[2000, 2001, 2002, 2003]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Wed Jun 15 00:00:00 IDT 2022, Shelves, 5
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 2004]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 2004:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 2004, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 2, Wed Jun 15 00:00:00 IDT 2022
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:2
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 5 to 2
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=5, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 2, 5, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[2000, 2001, 2002, 2003, 2004]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Wed Jun 15 00:00:00 IDT 2022, Shelves, 5
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 2005]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 2005:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 2005, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 2, Wed Jun 15 00:00:00 IDT 2022
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:2
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 5 to 2
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=5, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 2, 5, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[2000, 2001, 2002, 2003, 2004, 2005]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Wed Jun 15 00:00:00 IDT 2022, Shelves, 5
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 2006]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 2006:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 2006, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 2, Wed Jun 15 00:00:00 IDT 2022
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:2
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 5 to 2
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=5, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 2, 5, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[2000, 2001, 2002, 2003, 2004, 2005, 2006]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Wed Jun 15 00:00:00 IDT 2022, Shelves, 5
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 2007]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 2007:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 2007, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 2, Wed Jun 15 00:00:00 IDT 2022
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:2
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 5 to 2
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=5, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 2, 5, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Wed Jun 15 00:00:00 IDT 2022, Shelves, 5
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 2008]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 2008:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 2008, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT weight FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:39] - create new Object
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:88] - loaded new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [8]
failed due to 
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Item,Line:62] - loaded new Object
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [15]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [14]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:88] - loaded new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [9]
failed due to 
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Item,Line:62] - loaded new Object
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:19 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 4, Thu Jul 15 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:4
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 6, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 7, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 8, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 9, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 10, Shelves
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 11, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 12, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 13, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 14, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 15, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 16, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 17, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 18, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 19, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:756] - 0, 20, Storage
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:762] - the product with productType #4 need new shelf.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 12
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 7
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 3
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 1
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 2
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:766] - 0
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 6 to 4
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=4, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=6, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 4, 6, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:533] - products=[]
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Thu Jul 15 00:00:00 IDT 2021, Shelves, 6
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 4000]
failed due to 
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 4000:
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 4000, Shelves
[WARN ] 15-06-2021 15:35:19 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 4, Thu Jul 15 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:4
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 6 to 4
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=4, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=6, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 4, 6, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[4000]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Thu Jul 15 00:00:00 IDT 2021, Shelves, 6
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 4001]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 4001:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 4001, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 4, Thu Jul 15 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:4
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 6 to 4
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=4, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=6, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 4, 6, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[4000, 4001]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Thu Jul 15 00:00:00 IDT 2021, Shelves, 6
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 4002]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 4002:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 4002, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 4, Thu Jul 15 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:4
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 6 to 4
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=4, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=6, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 4, 6, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[4000, 4001, 4002]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Thu Jul 15 00:00:00 IDT 2021, Shelves, 6
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 4003]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 4003:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 4003, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 4, Thu Jul 15 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:4
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 6 to 4
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=4, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=6, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 4, 6, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[4000, 4001, 4002, 4003]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Thu Jul 15 00:00:00 IDT 2021, Shelves, 6
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 4004]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 4004:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 4004, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 4, Thu Jul 15 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:4
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 6 to 4
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=4, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=6, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 4, 6, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[4000, 4001, 4002, 4003, 4004]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Thu Jul 15 00:00:00 IDT 2021, Shelves, 6
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 4005]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 4005:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 4005, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 4, Thu Jul 15 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:4
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 6 to 4
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=4, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=6, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 4, 6, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[4000, 4001, 4002, 4003, 4004, 4005]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Thu Jul 15 00:00:00 IDT 2021, Shelves, 6
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 4006]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 4006:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 4006, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 4, Thu Jul 15 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:4
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 6 to 4
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=4, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=6, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 4, 6, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[4000, 4001, 4002, 4003, 4004, 4005, 4006]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Thu Jul 15 00:00:00 IDT 2021, Shelves, 6
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 4007]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 4007:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 4007, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 4, Thu Jul 15 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:4
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 6 to 4
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=4, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=6, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 4, 6, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Thu Jul 15 00:00:00 IDT 2021, Shelves, 6
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 4008]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 4008:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 4008, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 4, Thu Jul 15 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:4
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 6 to 4
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=4, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=6, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 4, 6, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Thu Jul 15 00:00:00 IDT 2021, Shelves, 6
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 4009]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 4009:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 4009, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT weight FROM Items
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:39] - create new Object
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:88] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [8]
failed due to 
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Item,Line:62] - loaded new Object
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [15]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [14]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:88] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [9]
failed due to 
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Item,Line:62] - loaded new Object
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [5]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 5, Tue Jun 29 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:5
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 7, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 8, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 9, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 10, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 11, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 12, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 13, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 14, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 15, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 16, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 17, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 18, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 19, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 20, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:762] - the product with productType #5 need new shelf.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 12
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 7
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 3
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 1
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 2
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 4
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 0
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 7 to 5
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=5, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=7, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 5, 7, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Tue Jun 29 00:00:00 IDT 2021, Shelves, 7
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 5000]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 5000:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 5000, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [5]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 5, Tue Jun 29 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:5
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 5, 7, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 7 to 5
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=5, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=7, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 5, 7, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[5000]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Tue Jun 29 00:00:00 IDT 2021, Shelves, 7
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 5001]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 5001:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 5001, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [5]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 5, Tue Jun 29 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:5
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 5, 7, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 7 to 5
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=5, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=7, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 5, 7, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[5000, 5001]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Tue Jun 29 00:00:00 IDT 2021, Shelves, 7
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 5002]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 5002:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 5002, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [5]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 5, Tue Jun 29 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:5
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 5, 7, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 7 to 5
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=5, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=7, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 5, 7, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[5000, 5001, 5002]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Tue Jun 29 00:00:00 IDT 2021, Shelves, 7
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 5003]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 5003:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 5003, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT minimalAmount FROM QuantityDocuments
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT discount FROM QuantityDocuments
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT weight FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:39] - create new Object
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:88] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [8]
failed due to 
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Item,Line:62] - loaded new Object
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [15]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [14]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:88] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [9]
failed due to 
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Item,Line:62] - loaded new Object
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:20 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 9, Mon Jun 15 00:00:00 IDT 2071
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:9
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 5, 7, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 8, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 9, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 10, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 11, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 12, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 13, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 14, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 15, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 16, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 17, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 18, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 19, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 0, 20, Storage
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:762] - the product with productType #9 need new shelf.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 12
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 7
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 3
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 1
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 2
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 4
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 5
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:766] - 0
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 8 to 9
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=9, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=8, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 9, 8, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Mon Jun 15 00:00:00 IDT 2071, Shelves, 8
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 9000]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 9000:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 9000, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 9, Mon Jun 15 00:00:00 IDT 2071
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:9
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 5, 7, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 9, 8, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 8 to 9
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=9, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=8, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 9, 8, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[9000]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Mon Jun 15 00:00:00 IDT 2071, Shelves, 8
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 9001]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 9001:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 9001, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 9, Mon Jun 15 00:00:00 IDT 2071
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:9
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 5, 7, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 9, 8, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 8 to 9
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=9, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=8, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 9, 8, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[9000, 9001]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Mon Jun 15 00:00:00 IDT 2071, Shelves, 8
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 9002]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 9002:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 9002, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 9, Mon Jun 15 00:00:00 IDT 2071
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:9
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 5, 7, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 9, 8, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 8 to 9
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=9, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=8, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 9, 8, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[9000, 9001, 9002]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Mon Jun 15 00:00:00 IDT 2071, Shelves, 8
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 9003]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 9003:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 9003, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 9, Mon Jun 15 00:00:00 IDT 2071
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:9
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 1, 4, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 2, 5, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 4, 6, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 5, 7, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 9, 8, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 8 to 9
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=9, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=8, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 9, 8, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[9000, 9001, 9002, 9003]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Mon Jun 15 00:00:00 IDT 2071, Shelves, 8
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 9004]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 9004:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 9004, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT minimalAmount FROM QuantityDocuments
WHERE itemId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT weight FROM Items
WHERE itemId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [3]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 3, Thu Jul 15 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:3
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 3 to 3
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=3, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=3, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 3, 3, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[3000]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Thu Jul 15 00:00:00 IDT 2021, Shelves, 3
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 3001]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 3001:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 3001, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [3]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 3, Thu Jul 15 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:3
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 3 to 3
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=3, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=3, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 3, 3, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[3000, 3001]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Thu Jul 15 00:00:00 IDT 2021, Shelves, 3
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 3002]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 3002:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 3002, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [3]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 3, Thu Jul 15 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:3
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 3 to 3
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=3, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=3, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 3, 3, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[3000, 3001, 3002]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Thu Jul 15 00:00:00 IDT 2021, Shelves, 3
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 3003]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 3003:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 3003, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [3]
failed due to 
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:527] - got inside addProduct(int typeID, Date expiration) Method with: 3, Thu Jul 15 00:00:00 IDT 2021
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:700] - got inside checkIDProductTypeExist(int check) Method with:3
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 12, 1, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 7, 2, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:756] - 3, 3, Shelves
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:91] - set_typeID(int typeID)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:93] - set type of 3 to 3
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalStock.DALShelf,Line:89] - query: UPDATE Shelf  
SET typeID=? WHERE storeID=? AND shelfID=?; params: [Tuple{item1=3, item2=class java.lang.Integer}, Tuple{item1=2, item2=class java.lang.Integer}, Tuple{item1=3, item2=class java.lang.Integer}]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:532] - shelf: 3, 3, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:533] - products=[3000, 3001, 3002, 3003]
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:55] - get_shelfID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:97] - addProduct(Date expiration, Location l) Values: Thu Jul 15 00:00:00 IDT 2021, Shelves, 3
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:107] - adding product to dal from instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:44] - starting 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: DataAccess.DalController,Line:79] - Select query: SELECT *  
FROM Product  
WHERE storeID=? AND productID=?;  
 params: [2, 3004]
failed due to 
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:46] - did 1st check DALProduct
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:48] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:109] - done adding product to dal in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:68] - addProduct(Product p)
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Product,Line:79] - get_id()
[INFO ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:93] - new item add to IC #?
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:111] - done adding product to biz in instanceController.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.InstanceController,Line:113] - done adding product to hash in instanceController.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:535] - the productID: 3004:
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:61] - get_location()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:337] - addProduct(int productID, Location l) Values: 3004, Shelves
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:344] - adding product to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:347] - adding shelves to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.Type.ProductType,Line:353] - done adding shelves/storage to product type.
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:539] - adding product in store controller.
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:110] - addProduct()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:104] - isFull()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:67] - get_cur()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:98] - get_maxAmount()
[DEBUG] 15-06-2021 15:35:20 [class: Business.StockBusiness.instance.Shelf,Line:85] - get_typeID()
[WARN ] 15-06-2021 15:35:20 [class: Business.StockBusiness.StoreController,Line:541] - done adding product in store controller.
[DEBUG] 15-06-2021 15:35:29 [class: Business.ApplicationFacade.RegularRoleController,Line:168] - loading data of branch id: 1
[WARN ] 15-06-2021 15:35:29 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT categoryID 
FROM Category
WHERE storeID=?; params: [1]
[WARN ] 15-06-2021 15:35:29 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4]
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[WARN ] 15-06-2021 15:35:29 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT typeID 
FROM ProductType
WHERE storeID=?; params: [1]
[WARN ] 15-06-2021 15:35:29 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.StoreController,Line:126] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:29 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:29 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:29 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:29 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:29 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:29 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:29 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:29 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:29 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:29 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:130] - {Business.StockBusiness.Type.ProductType@6955cb39=Business.StockBusiness.instance.InstanceController@5c10f1c3, Business.StockBusiness.Type.ProductType@315f43d5=Business.StockBusiness.instance.InstanceController@7ac2e39b, Business.StockBusiness.Type.ProductType@68044f4=Business.StockBusiness.instance.InstanceController@78365cfa, Business.StockBusiness.Type.ProductType@235a0c16=Business.StockBusiness.instance.InstanceController@64a8c844, Business.StockBusiness.Type.ProductType@395b56bb=Business.StockBusiness.instance.InstanceController@3f6db3fb, Business.StockBusiness.Type.ProductType@68fa0ba8=Business.StockBusiness.instance.InstanceController@52de51b6, Business.StockBusiness.Type.ProductType@256f8274=Business.StockBusiness.instance.InstanceController@18c5069b, Business.StockBusiness.Type.ProductType@4b9df8a=Business.StockBusiness.instance.InstanceController@3a0d172f, Business.StockBusiness.Type.ProductType@2f05be7f=Business.StockBusiness.instance.InstanceController@68ad99fe, Business.StockBusiness.Type.ProductType@5e8ac0e1=Business.StockBusiness.instance.InstanceController@485e36bc, Business.StockBusiness.Type.ProductType@18b0930f=Business.StockBusiness.instance.InstanceController@781f10f2, Business.StockBusiness.Type.ProductType@2b5f4d54=Business.StockBusiness.instance.InstanceController@2a79d4b1, Business.StockBusiness.Type.ProductType@6b7906b3=Business.StockBusiness.instance.InstanceController@2e9fda69, Business.StockBusiness.Type.ProductType@52d239ba=Business.StockBusiness.instance.InstanceController@17cdf2d0, Business.StockBusiness.Type.ProductType@aafcffa=Business.StockBusiness.instance.InstanceController@1755e85b, Business.StockBusiness.Type.ProductType@5f7b97da=Business.StockBusiness.instance.InstanceController@736d6a5c, Business.StockBusiness.Type.ProductType@6c5945a7=Business.StockBusiness.instance.InstanceController@2371aaca, Business.StockBusiness.Type.ProductType@640f11a1=Business.StockBusiness.instance.InstanceController@5b529706, Business.StockBusiness.Type.ProductType@3a1dd365=Business.StockBusiness.instance.InstanceController@63fdab07}
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT shelfID 
FROM Shelf
WHERE storeID=?; params: [1]
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT categoryID 
FROM Category
WHERE storeID=?; params: [2]
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4]
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT typeID 
FROM ProductType
WHERE storeID=?; params: [2]
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:126] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:130] - {Business.StockBusiness.Type.ProductType@14dda234=Business.StockBusiness.instance.InstanceController@c5ee75e, Business.StockBusiness.Type.ProductType@5a411614=Business.StockBusiness.instance.InstanceController@48a12036, Business.StockBusiness.Type.ProductType@1a45193b=Business.StockBusiness.instance.InstanceController@bf1ec20, Business.StockBusiness.Type.ProductType@74a6a609=Business.StockBusiness.instance.InstanceController@70efb718, Business.StockBusiness.Type.ProductType@6e6d5d29=Business.StockBusiness.instance.InstanceController@b70da4c, Business.StockBusiness.Type.ProductType@38f116f6=Business.StockBusiness.instance.InstanceController@4a11eb84, Business.StockBusiness.Type.ProductType@6c25e6c4=Business.StockBusiness.instance.InstanceController@4e858e0a, Business.StockBusiness.Type.ProductType@424fd310=Business.StockBusiness.instance.InstanceController@435fb7b5, Business.StockBusiness.Type.ProductType@1506f20f=Business.StockBusiness.instance.InstanceController@4e70a728, Business.StockBusiness.Type.ProductType@85e6769=Business.StockBusiness.instance.InstanceController@b7838a9, Business.StockBusiness.Type.ProductType@5553d0f5=Business.StockBusiness.instance.InstanceController@696f0212, Business.StockBusiness.Type.ProductType@7b5a12ae=Business.StockBusiness.instance.InstanceController@5733f295, Business.StockBusiness.Type.ProductType@2374d36a=Business.StockBusiness.instance.InstanceController@1c3146bc, Business.StockBusiness.Type.ProductType@3f390d63=Business.StockBusiness.instance.InstanceController@56c698e3, Business.StockBusiness.Type.ProductType@47a5b70d=Business.StockBusiness.instance.InstanceController@47a86fbb, Business.StockBusiness.Type.ProductType@54d18072=Business.StockBusiness.instance.InstanceController@f478a81, Business.StockBusiness.Type.ProductType@5286c33a=Business.StockBusiness.instance.InstanceController@19553973, Business.StockBusiness.Type.ProductType@5c530d1e=Business.StockBusiness.instance.InstanceController@7bb6ab3a, Business.StockBusiness.Type.ProductType@1af687fe=Business.StockBusiness.instance.InstanceController@7fe7c640}
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT shelfID 
FROM Shelf
WHERE storeID=?; params: [2]
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT categoryID 
FROM Category
WHERE storeID=?; params: [3]
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4]
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.Category,Line:104] - get_categoryID()
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT typeID 
FROM ProductType
WHERE storeID=?; params: [3]
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:126] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:65] - loaded product types
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:73] - got sale discount
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:67] - loaded sale discounts
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALProductType,Line:366] - query: SELECT discountID  
FROM Discount  
WHERE storeID=? AND typeID=?;
 params: []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:83] - []
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Type.ProductType,Line:69] - loaded supplier discounts
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: Utility.Util,Line:28] - entry is already in DB, will not attempt insert.
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:130] - {Business.StockBusiness.Type.ProductType@3e14c16d=Business.StockBusiness.instance.InstanceController@3c989952, Business.StockBusiness.Type.ProductType@5a85c92=Business.StockBusiness.instance.InstanceController@784b990c, Business.StockBusiness.Type.ProductType@4bd1f8dd=Business.StockBusiness.instance.InstanceController@3d3ba765, Business.StockBusiness.Type.ProductType@6475472c=Business.StockBusiness.instance.InstanceController@25bc0606, Business.StockBusiness.Type.ProductType@4795ded0=Business.StockBusiness.instance.InstanceController@5d1659ea, Business.StockBusiness.Type.ProductType@7ce97ee5=Business.StockBusiness.instance.InstanceController@793138bd, Business.StockBusiness.Type.ProductType@14d14731=Business.StockBusiness.instance.InstanceController@1951b871, Business.StockBusiness.Type.ProductType@4c4748bf=Business.StockBusiness.instance.InstanceController@5c18016b, Business.StockBusiness.Type.ProductType@32811494=Business.StockBusiness.instance.InstanceController@33aeca0b, Business.StockBusiness.Type.ProductType@4b7e96a=Business.StockBusiness.instance.InstanceController@43aaf813, Business.StockBusiness.Type.ProductType@2eced48b=Business.StockBusiness.instance.InstanceController@57ac5227, Business.StockBusiness.Type.ProductType@3f07b12c=Business.StockBusiness.instance.InstanceController@4ba302e0, Business.StockBusiness.Type.ProductType@32c8e539=Business.StockBusiness.instance.InstanceController@e98770d, Business.StockBusiness.Type.ProductType@42f33b5d=Business.StockBusiness.instance.InstanceController@1ae67cad, Business.StockBusiness.Type.ProductType@47c4ecdc=Business.StockBusiness.instance.InstanceController@2f6e28bc, Business.StockBusiness.Type.ProductType@73dce0e6=Business.StockBusiness.instance.InstanceController@7c098bb3, Business.StockBusiness.Type.ProductType@7096b474=Business.StockBusiness.instance.InstanceController@31e4bb20, Business.StockBusiness.Type.ProductType@53dacd14=Business.StockBusiness.instance.InstanceController@18cebaa5, Business.StockBusiness.Type.ProductType@5c8504fd=Business.StockBusiness.instance.InstanceController@463b4ac8}
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALStoreController,Line:168] - query: SELECT shelfID 
FROM Shelf
WHERE storeID=?; params: [3]
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalStock.DALStoreController,Line:176] - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM StoreController WHERE storeID=? params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[WARN ] 15-06-2021 15:35:30 [class: DataAccess.SMapper,Line:116] - mapper returned null on:class DataAccess.DalStock.DALStoreController
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:95] - storeID is not in DB
[WARN ] 15-06-2021 15:35:30 [class: Business.StockBusiness.Fcade.StorageService,Line:486] - java.lang.IllegalArgumentException: storeID is not in DB
[DEBUG] 15-06-2021 15:35:30 [class: Business.StockBusiness.StoreController,Line:156] - got inside getID Method
[DEBUG] 15-06-2021 15:35:33 [class: Business.ApplicationFacade.RegularRoleController,Line:46] - entered login function with user id: 6
[DEBUG] 15-06-2021 15:35:33 [class: Business.ApplicationFacade.RegularRoleController,Line:48] - successfully logged in - user fields are updated to +6
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Suppliers
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierName FROM Suppliers
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankNumber FROM BankInfo
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchNumber FROM BankInfo
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankAccount FROM BankInfo
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT payWay FROM Suppliers
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Suppliers
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierName FROM Suppliers
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankNumber FROM BankInfo
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchNumber FROM BankInfo
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankAccount FROM BankInfo
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT payWay FROM Suppliers
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Suppliers
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierName FROM Suppliers
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankNumber FROM BankInfo
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchNumber FROM BankInfo
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankAccount FROM BankInfo
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT payWay FROM Suppliers
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Suppliers
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierName FROM Suppliers
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankNumber FROM BankInfo
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchNumber FROM BankInfo
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankAccount FROM BankInfo
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT payWay FROM Suppliers
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Suppliers
WHERE supplierBN = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierName FROM Suppliers
WHERE supplierBN = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankNumber FROM BankInfo
WHERE supplierBN = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchNumber FROM BankInfo
WHERE supplierBN = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankAccount FROM BankInfo
WHERE supplierBN = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT payWay FROM Suppliers
WHERE supplierBN = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT transportationID FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [10]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [10]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [10]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [6]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [6]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [6]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT minimalAmount FROM SupplierAgreements
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT discount FROM SupplierAgreements
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT constantTime FROM SupplierAgreements
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT transportationID FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [12]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [12]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [12]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [7]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [7]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [7]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT minimalAmount FROM SupplierAgreements
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT discount FROM SupplierAgreements
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT constantTime FROM SupplierAgreements
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT transportationID FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [14]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [14]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [14]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [15]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [15]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [15]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [8]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [8]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [8]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT minimalAmount FROM SupplierAgreements
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT discount FROM SupplierAgreements
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT constantTime FROM SupplierAgreements
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT transportationID FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT minimalAmount FROM SupplierAgreements
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT discount FROM SupplierAgreements
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT constantTime FROM SupplierAgreements
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:35 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT transportationID FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:39] - create new Object
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:88] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [8]
failed due to 
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Item,Line:62] - loaded new Object
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [15]
failed due to 
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [14]
failed due to 
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:88] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [9]
failed due to 
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Item,Line:62] - loaded new Object
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:39] - create new Object
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:88] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [8]
failed due to 
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Item,Line:62] - loaded new Object
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [15]
failed due to 
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [14]
failed due to 
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:39 [class: Business.SupplierBusiness.Order,Line:88] - loaded new Object
[WARN ] 15-06-2021 15:35:39 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[INFO ] 15-06-2021 15:35:40 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:40 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [9]
failed due to 
[INFO ] 15-06-2021 15:35:40 [class: Business.SupplierBusiness.Item,Line:62] - loaded new Object
[INFO ] 15-06-2021 15:35:40 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:40 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:40 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:40 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:40 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:40 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[WARN ] 15-06-2021 15:35:40 [class: DataAccess.DalController,Line:79] - Select query: SELECT isArrived FROM Orders
WHERE orderId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Suppliers
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierName FROM Suppliers
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankNumber FROM BankInfo
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchNumber FROM BankInfo
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankAccount FROM BankInfo
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT payWay FROM Suppliers
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Suppliers
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierName FROM Suppliers
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankNumber FROM BankInfo
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchNumber FROM BankInfo
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankAccount FROM BankInfo
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT payWay FROM Suppliers
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Suppliers
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierName FROM Suppliers
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankNumber FROM BankInfo
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchNumber FROM BankInfo
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankAccount FROM BankInfo
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT payWay FROM Suppliers
WHERE supplierBN = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Suppliers
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierName FROM Suppliers
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankNumber FROM BankInfo
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchNumber FROM BankInfo
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankAccount FROM BankInfo
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT payWay FROM Suppliers
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Suppliers
WHERE supplierBN = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierName FROM Suppliers
WHERE supplierBN = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankNumber FROM BankInfo
WHERE supplierBN = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchNumber FROM BankInfo
WHERE supplierBN = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT bankAccount FROM BankInfo
WHERE supplierBN = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT payWay FROM Suppliers
WHERE supplierBN = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT transportationID FROM Orders
WHERE orderId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [10]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [10]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [10]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [6]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [6]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [6]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT minimalAmount FROM SupplierAgreements
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT discount FROM SupplierAgreements
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT constantTime FROM SupplierAgreements
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT transportationID FROM Orders
WHERE orderId = ?; params: [2]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [12]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [12]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [12]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [7]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [7]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [7]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT minimalAmount FROM SupplierAgreements
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT discount FROM SupplierAgreements
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT constantTime FROM SupplierAgreements
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [1]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT transportationID FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [9]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT itemName FROM Items
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT price FROM Items
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT expirationDate FROM Items
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT minimalAmount FROM SupplierAgreements
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT discount FROM SupplierAgreements
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT constantTime FROM SupplierAgreements
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:42 [class: DataAccess.DalController,Line:79] - Select query: SELECT shipToUs FROM SupplierAgreements
WHERE supplierBN = ?; params: [3]
failed due to 
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT supplierBN FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalAmount FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT transportationID FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[INFO ] 15-06-2021 15:35:44 [class: Business.SupplierBusiness.Order,Line:39] - create new Object
[INFO ] 15-06-2021 15:35:44 [class: Business.SupplierBusiness.Order,Line:88] - loaded new Object
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[INFO ] 15-06-2021 15:35:44 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [9]
failed due to 
[INFO ] 15-06-2021 15:35:44 [class: Business.SupplierBusiness.Item,Line:62] - loaded new Object
[INFO ] 15-06-2021 15:35:44 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:44 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT totalWeight FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[INFO ] 15-06-2021 15:35:44 [class: Business.SupplierBusiness.Order,Line:39] - create new Object
[INFO ] 15-06-2021 15:35:44 [class: Business.SupplierBusiness.Order,Line:88] - loaded new Object
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT orderType FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
[INFO ] 15-06-2021 15:35:44 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [9]
failed due to 
[INFO ] 15-06-2021 15:35:44 [class: Business.SupplierBusiness.Item,Line:62] - loaded new Object
[INFO ] 15-06-2021 15:35:44 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [16]
failed due to 
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:44 [class: Business.SupplierBusiness.Order,Line:117] - loaded new Object
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT * FROM QuantityDocuments
WHERE itemId = ?; params: [5]
failed due to 
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[INFO ] 15-06-2021 15:35:44 [class: Business.SupplierBusiness.Order,Line:39] - create new Object
[INFO ] 15-06-2021 15:35:44 [class: Business.SupplierBusiness.Order,Line:57] - create new Object
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT branchId FROM Orders
WHERE orderId = ?; params: [0]
failed due to 
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:118] - DalController from RS error due to: java.sql.SQLException: ResultSet closed
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalSuppliers.DalOrder,Line:193] - java.lang.NullPointerException: Cannot read field "item2" because "tuple" is null
[DEBUG] 15-06-2021 15:35:44 [class: Business.ApplicationFacade.ManagerRoleController,Line:418] - loading data of branch id: 1
[DEBUG] 15-06-2021 15:35:44 [class: Business.Employees.ShiftPKG.Shift,Line:54] - shift: 12 created
[DEBUG] 15-06-2021 15:35:44 [class: Business.Employees.ShiftPKG.ShiftController,Line:290] - EID: 12 remove from optionals
[DEBUG] 15-06-2021 15:35:44 [class: Business.Employees.ShiftPKG.ShiftController,Line:290] - EID: 19 remove from optionals
[DEBUG] 15-06-2021 15:35:44 [class: Business.Employees.ShiftPKG.ShiftController,Line:290] - EID: 26 remove from optionals
[DEBUG] 15-06-2021 15:35:44 [class: Business.Employees.ShiftPKG.ShiftController,Line:290] - EID: 11 remove from optionals
[WARN ] 15-06-2021 15:35:44 [class: DataAccess.DalController,Line:79] - Select query: SELECT isArrived FROM Orders
WHERE orderId = ?; params: [4]
failed due to 
